name: Vercel Preview Deployment

on:
  push:
    branches-ignore:
      - main
    paths:
      - "src/**"
      - "public/**"
      - "package.json"
      - "pnpm-lock.yaml"
      - "next.config.ts"
      - "tailwind.config.ts"
      - "postcss.config.mjs"
      - ".github/workflows/**"
      - "eslint.config.mjs"
      - "tsconfig.json"
    paths-ignore:
      - "renovate.json"
      - "**/*.md"
      - ".vscode/**"
      - "context/**"

env:
  NODE_VERSION: "22.14.0"
  PNPM_VERSION: "10.5.2"

permissions:
  contents: read
  deployments: write

jobs:
  deploy-preview:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup environment
        uses: ./.github/actions/setup
        with:
          node-version: ${{ env.NODE_VERSION }}
          pnpm-version: ${{ env.PNPM_VERSION }}

      # プレビュー環境用のSSGビルドを追加
      - name: Build static site (SSG) for preview
        run: pnpm run build
        env:
          DEBUG_URL: ${{ secrets.TEST_DEBUG_URL }}

      # 静的サイトのアーティファクトを保存（プレビュー環境用）
      - name: Upload preview static site artifacts
        uses: actions/upload-artifact@v4
        with:
          name: preview-static-site
          path: out/
          retention-days: 7

      - name: Install Vercel CLI
        run: pnpm add --global vercel@latest

      - name: Pull Vercel Environment Information
        run:
          vercel pull --yes --environment=preview --token=${{
          secrets.VERCEL_TOKEN }}
        env:
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

      - name: Pull Vercel Environment Information
        run:
          vercel pull --yes --environment=preview --token=${{
          secrets.VERCEL_TOKEN }}
        env:
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

      - name: Set Vercel Environment Variables
        run: |
          vercel env rm DEBUG_URL preview --yes --token=${{ secrets.VERCEL_TOKEN }} || true
          echo "${{ secrets.TEST_DEBUG_URL }}" | vercel env add DEBUG_URL preview --token=${{ secrets.VERCEL_TOKEN }}
        env:
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

      - name: Verify Vercel Environment Variables
        run: |
          echo "Listing Vercel environment variables:"
          vercel env ls preview --token=${{ secrets.VERCEL_TOKEN }}
        env:
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

      - name: Build Project Artifacts
        run: vercel build --token=${{ secrets.VERCEL_TOKEN }}
        env:
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
          DEBUG_URL: ${{ secrets.TEST_DEBUG_URL }}

      - name: Deploy Project Artifacts to Vercel
        run: vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }}
        env:
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
          DEBUG_URL: ${{ secrets.TEST_DEBUG_URL }}
